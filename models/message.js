let mongoose = require('mongoose');
let Schema = mongoose.Schema;
let User = require('./user');

let schema = new Schema({//in MongoDB: this is the schema for one document (i.e. data record) in a 'messages' collection
//since here omitted unique key _id, which is Types.ObjectId (i.e. primary key), it will be autogenerated
  content: {type: String, required:true},//one sub-document, field:value pair
  user: {type: Schema.Types.ObjectId, ref: 'User'}//here basically referencing to user's _id, (i.e. act as foreign key)
  //i.e one message has one user
});

//mongoose schema 'post' hook - fired FIRST when remove function is called upon this schema
schema.post('remove', function(message){
  console.log("schema message remove 1");
  console.log(message);
  console.log(message.user);
  User.findById(message.user, function(err, user){//call back method is executed last (after remove) though
    console.log("inside find ");
    console.log(user);
    if(err){
      return res.status(500).json({
        title: 'An error occured in schema post removal',
        error: err
      });
    }
    if(!user) console.log('user not found!')
    else{
      console.log("pulling message "+message._id);
      user.messages.pull(message._id);//seems to related to MongoDB $pull operator
      user.save();
    }
  })
  console.log("schema message remove 2");
})

module.exports = mongoose.model('Message', schema); //this will translate to 'messages' collection in MongoDB
